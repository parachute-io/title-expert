=begin
#ACS Title Expert

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module TitleExpert
  class TitleNumbersePDEnquiryByPropertyDescriptionApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Search for the title number(s) for an address (ePD, Enquiry by Property Description).
    # 
    # @param clientid Your client id.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bname Building name (max 50 chars). Always specify at least one of this and bno.
    # @option opts [String] :bno Building number (max 5 chars). Always specify at least one of this and bname.
    # @option opts [String] :street Street (max 80 chars). If postcode is not specified then specify both street and city.
    # @option opts [String] :city Town or city (max 35 chars). If postcode is not specified then specify both street and city.
    # @option opts [String] :postcode Full postcode, including a space separating the two parts.
    # @option opts [String] :tenure Optional comma-separated list of tenure types to filter results. Values allowed are: other, freehold, leasehold, commonhold, feuhold, mixed, unknown, unavailable, caution_against_first_registration, rent_charge, franchise, profit_a_prendre_in_gross, manor.
    # @return [TitleNumbersResult]
    def title_numbers_search(clientid, opts = {})
      data, _status_code, _headers = title_numbers_search_with_http_info(clientid, opts)
      return data
    end

    # Search for the title number(s) for an address (ePD, Enquiry by Property Description).
    # 
    # @param clientid Your client id.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :bname Building name (max 50 chars). Always specify at least one of this and bno.
    # @option opts [String] :bno Building number (max 5 chars). Always specify at least one of this and bname.
    # @option opts [String] :street Street (max 80 chars). If postcode is not specified then specify both street and city.
    # @option opts [String] :city Town or city (max 35 chars). If postcode is not specified then specify both street and city.
    # @option opts [String] :postcode Full postcode, including a space separating the two parts.
    # @option opts [String] :tenure Optional comma-separated list of tenure types to filter results. Values allowed are: other, freehold, leasehold, commonhold, feuhold, mixed, unknown, unavailable, caution_against_first_registration, rent_charge, franchise, profit_a_prendre_in_gross, manor.
    # @return [Array<(TitleNumbersResult, Fixnum, Hash)>] TitleNumbersResult data, response status code and response headers
    def title_numbers_search_with_http_info(clientid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TitleNumbersePDEnquiryByPropertyDescriptionApi.title_numbers_search ..."
      end
      # verify the required parameter 'clientid' is set
      fail ArgumentError, "Missing the required parameter 'clientid' when calling TitleNumbersePDEnquiryByPropertyDescriptionApi.title_numbers_search" if clientid.nil?
      if !opts[:'postcode'].nil? && opts[:'postcode'] !~ Regexp.new(/^[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][A-Z-[CIKMOV]]{2}$/)
        fail ArgumentError, "invalid value for 'opts[:\"postcode\"]' when calling TitleNumbersePDEnquiryByPropertyDescriptionApi.title_numbers_search, must conform to the pattern /^[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][A-Z-[CIKMOV]]{2}$/."
      end

      # resource path
      local_var_path = "/api/{clientid}/titlenumbers".sub('{format}','json').sub('{' + 'clientid' + '}', clientid.to_s)

      # query parameters
      query_params = {}
      query_params[:'bname'] = opts[:'bname'] if !opts[:'bname'].nil?
      query_params[:'bno'] = opts[:'bno'] if !opts[:'bno'].nil?
      query_params[:'street'] = opts[:'street'] if !opts[:'street'].nil?
      query_params[:'city'] = opts[:'city'] if !opts[:'city'].nil?
      query_params[:'postcode'] = opts[:'postcode'] if !opts[:'postcode'].nil?
      query_params[:'tenure'] = opts[:'tenure'] if !opts[:'tenure'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basic']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TitleNumbersResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TitleNumbersePDEnquiryByPropertyDescriptionApi#title_numbers_search\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
