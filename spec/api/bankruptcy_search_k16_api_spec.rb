=begin
#ACS Title Expert

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for TitleExpert::BankruptcySearchK16Api
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BankruptcySearchK16Api' do
  before do
    # run before each test
    @instance = TitleExpert::BankruptcySearchK16Api.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BankruptcySearchK16Api' do
    it 'should create an instact of BankruptcySearchK16Api' do
      expect(@instance).to be_instance_of(TitleExpert::BankruptcySearchK16Api)
    end
  end

  # unit tests for bankruptcy_search_acknowledge_dequeued
  # Acknowledge receipt of the result of a Request that was retrieved from the get-next-ready endpoint.
  # 
  # @param clientid Your client id.
  # @param requestid The id of the request.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'bankruptcy_search_acknowledge_dequeued test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bankruptcy_search_acknowledge_request
  # Acknowledge receipt of the result of a Request that was not retrieved from the get-next-ready endpoint.
  # 
  # @param clientid Your client id.
  # @param requestid The id of the request.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'bankruptcy_search_acknowledge_request test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bankruptcy_search_create_request
  # Issue a K16 request, Bankruptcy Search. This will incur a charge.
  # 
  # @param clientid Your client id.
  # @param bankruptcy_search_request Details of the name(s) to check for bankruptcy.
  # @param [Hash] opts the optional parameters
  # @return [BankruptcyResponse]
  describe 'bankruptcy_search_create_request test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bankruptcy_search_dequeue_next_ready_for_ack
  # Gets the next earliest-started Request which has finished and has not yet been Acknowledged. The request will be locked for a certain time window within which it will not be available from get-next-ready. Normally, you will Acknowledge within this time window as part of your processing of the results.
  # 
  # @param clientid Your client id.
  # @param [Hash] opts the optional parameters
  # @return [TitleDataResponse]
  describe 'bankruptcy_search_dequeue_next_ready_for_ack test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bankruptcy_search_get_document
  # Get one of the documents returned by a Bankruptcy Search request.
  # 
  # @param clientid Your client id.
  # @param requestid The id of the request.
  # @param documentid The id of the particular document.
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'bankruptcy_search_get_document test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bankruptcy_search_get_request
  # Get the current status of a Bankruptcy Search request.
  # 
  # @param clientid Your client id.
  # @param requestid The id of the request.
  # @param [Hash] opts the optional parameters
  # @return [BankruptcyResponse]
  describe 'bankruptcy_search_get_request test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bankruptcy_search_search
  # Search for Bankruptcy Search requests meeting the specified criteria.
  # 
  # @param clientid Your client id.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Optional. Values allowed are: pending, complete, failed, cancelled, expired. Prepend ! to invert.
  # @option opts [String] :statussince Optional. Searches for requests whose status last changed at/after the specified UTC date/time (ISO8601/like format yyyy-MM-dd HH:mm:ss).
  # @option opts [String] :acknowledged Optional. Whether to search for requests that have (1, y, yes, true) or have not (0, n, no, false) been Acknowledged.
  # @option opts [String] :clientref Optional reference provided when request was submitted.
  # @option opts [String] :order Optional. Order by date request started; values allowed are: oldestfirst (default), newestfirst.
  # @option opts [String] :maxentries Optional. Limits the number of requests returned.
  # @return [Array<BankruptcyResponse>]
  describe 'bankruptcy_search_search test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
